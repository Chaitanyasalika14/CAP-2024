class Solution
{
    static class pair{
        int data;
        Node node;
        public pair(int data,Node node){
            this.node=node;
            this.data=data;
        }
    }
    

    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
   
    static ArrayList<Integer> topView(Node root)
    {
        ArrayList<Integer> l=new ArrayList<>();
        Queue<pair> q=new LinkedList<>();
        Map<Integer,Integer> map=new TreeMap<>();
        q.add(new pair(0,root));
        while(!q.isEmpty()){
            pair curr=q.poll();
            if(!map.containsKey(curr.data)){
                map.put(curr.data,curr.node.data);
            }
            if(curr.node.left!=null){
                q.add(new pair(curr.data-1,curr.node.left));
            }
            if(curr.node.right!=null){
                q.add(new pair(curr.data+1,curr.node.right));
            }
        }
        for(Map.Entry<Integer,Integer>entry:map.entrySet()){
            l.add(entry.getValue());
        }
    return l;
    }
    
    
}
